<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.portal.adm.member.mapper.MemberMapper">

	<sql id="searchMember">
		<where>
			<if test="searchKey != '' and searchKey == 'ALL' and searchValue != ''">
				and (upper(u.user_id) like concat('%',upper(#{searchValue}),'%') or upper(u.user_nm) like concat('%',upper(#{searchValue}),'%') or (upper(d.dept_nm) like concat('%',upper(#{searchValue}),'%')))
			</if>
			<if test="searchKey != '' and searchKey == 'userId' and searchValue != ''">
				and (upper(u.user_id) like concat('%',upper(#{searchValue}),'%'))
			</if>
			<if test="searchKey != '' and searchKey == 'userNm' and searchValue != ''">
				and (upper(u.user_nm) like concat('%',upper(#{searchValue}),'%'))
			</if>
			<if test="searchKey != '' and searchKey == 'deptNm' and searchValue != ''">
				and (upper(d.dept_nm) like concat('%',upper(#{searchValue}),'%'))
			</if>
			<if test="searchKey != '' and searchKey == 'deptCode' and searchValue != ''">
				and (upper(u.dept_code) = upper(#{searchValue}))
			</if>
			<if test="searchUseYn != null and searchUseYn != ''">
				and u.use_yn = #{searchUseYn}
			</if>
			<if test="searchCompanyCode != null and searchCompanyCode != ''">
				and u.company_code = #{searchCompanyCode}
			</if>
			<if test="searchRoleCode != null and searchRoleCode != ''">
				and tga.auth_id = #{searchRoleCode}
			</if>			
			<if test="deptCode != null and deptCode != ''">
				and (upper(u.dept_code) = upper(#{deptCode}))
			</if>
			<if test="filterLockYn != null and filterLockYn != ''">
				<choose>
					<when test="filterLockYn == 'Y'.toString()">
						coalesce(last_log_dt, now()) + interval '3 month' <![CDATA[<=]]> now()
					</when>
					<when test="filterLockYn == 'N'.toString()">
						coalesce(last_log_dt, now()) + interval '3 month' <![CDATA[>]]> now()
					</when>
				</choose> 			
			</if>			
		</where>
	</sql>

	<sql id="paging">
		limit #{offSet}, #{pageSize}
	</sql>

	<sql id="order">
		<if test="sortType != null and sortType != '' and sortDirection != null and sortDirection != ''">
		order by ${sortType} ${sortDirection}
		</if>
	</sql>

	<select id="selectMemberList" resultType="com.portal.adm.member.model.MemberModel" parameterType="com.portal.adm.member.model.MemberCriteria">
		select
			row_number() over () as rownum,
			u.company_code,
			u.user_id,
			u.user_nm,
			u.email,
			u.phone,
			u.pstn_nm,
			u.dept_nm,
			c.company_nm,
			u.auth_code,
			cc.code_nm as auth_nm,
			u.use_yn,
			u.last_log_dt,
			u.rgst_id,
			u.rgst_dt,
			u.modi_id,
			u.modi_dt
		from
			t1_user u
			left outer join t_company c ON c.company_code = u.company_code
			left outer join t_code cc ON cc.code_id = u.auth_code and cc.group_id = 'AUTH_CD'
			where 1 =1
		<if test="authCode = 'P'">
			and u.auth_code in ('P', 'A')
		</if>
		<if test="authCode = 'A'">
			and u.auth_code != 'P'
		      and u.company_code = #{companyCode} 		
		</if>		
		<include refid="searchMember"></include>
		order by user_nm ASC
		<include refid="paging"></include>
	</select>

	<select id="selectMemberListCount" resultType="int" parameterType="com.portal.adm.member.model.MemberCriteria">
		select
			count(*)
		from
			t1_user u
			left outer join t_company c ON c.company_code = u.company_code
			left outer join t_code cc ON cc.code_id = u.auth_code and cc.group_id = 'AUTH_CD'
			where 1 =1
		<if test="authCode = 'P'">
			and u.auth_code in ('P', 'A')
		</if>
		<if test="authCode = 'A'">
			and u.auth_code != 'P'
		      and u.company_code = #{companyCode} 		
		</if>		
		<include refid="searchMember"></include>
	</select>

	
	<select id="selectMember" parameterType="com.portal.adm.member.model.MemberModel" resultType="com.portal.adm.member.model.MemberModel">
		select
			u.company_code,
			u.user_id,
			u.user_nm,
			u.email,
			u.phone,
			u.pstn_nm,
			u.dept_nm,
			c.company_nm,
			u.auth_code,
			cc.code_nm as auth_nm,
			u.use_yn,
			u.last_log_dt,
			u.rgst_id,
			u.rgst_dt,
			u.modi_id,
			u.modi_dt
		from
			t1_user u
			left outer join t_company c ON c.company_code = u.company_code
			left outer join t_code cc ON cc.code_id = u.auth_code and cc.group_id = 'AUTH_CD'
		where u.company_code = #{companyCode}
		  and u.user_id  =  #{userId}			
	</select>
	
	

	 <update id="update" parameterType="com.portal.adm.member.model.MemberModel">
		update t1_user
		set
		    auth_code = #{authCode}
		  , email = #{email}
		  , phone = #{phone}
		  , use_yn = #{useYn}
		  , modi_dt = now()
		  , modi_id = #{modiId}
		where company_code = #{companyCode}
		  and user_id = #{userId}
	</update>
	
	 <update id="delete" parameterType="com.portal.adm.member.model.MemberModel">
		update t1_user
		set
		  use_yn = 'N'
		  , modi_dt = now()
		  , modi_id = #{modiId}
		where company_code = #{companyCode}
		  and user_id = #{userId}
	</update>
	
	<insert id="insertUser" parameterType="com.portal.adm.member.model.MemberModel">
		INSERT INTO T1_USER (
		    COMPANY_CODE,
			USER_ID,
			USER_NM,
			EMAIL,
			PHONE,
			PASSWORD,
			PSTN_NM,
			DEPT_NM,
			USE_YN,
			RGST_ID,
			RGST_DT,
			MODI_ID,
			MODI_DT
		)
		VALUES(
		    #{companyCode}
			, #{userId}
			, #{userNm}
			, #{email}
			, #{phone}
			, <![CDATA[SHA2('pp12#$',256)]]>
			, #{pstnNm}
			, #{deptNm}
			, #{useYn}
			, #{rgstId}
			, NOW()
			, #{modiId}
			, NOW()
		)
	</insert>
	

	<update id="unlockAccount" parameterType="com.portal.adm.member.model.MemberModel">
		UPDATE t1_user
        SET
            last_log_dt = NULL
		where company_code = #{companyCode}
		  and user_id = #{userId}
	</update>
	
	 <select id="selectMemberOne" resultType="int" parameterType="com.portal.adm.member.model.MemberModel">
		SELECT 
			COUNT(1) 
		FROM 
			T1_USER 
		where company_code = #{companyCode}
		  and user_id = #{userId}
	</select>
	
	 <update id="updateMember" parameterType="com.portal.adm.member.model.MemberModel">
		UPDATE T1_USER
		SET
		   EMAIL = #{email}
		  , PHONE = #{phone}
		  , MODI_DT = now()
		  , MODI_ID = #{modiId}
		where company_code = #{companyCode}
		  and user_id = #{userId}
	</update>

</mapper>