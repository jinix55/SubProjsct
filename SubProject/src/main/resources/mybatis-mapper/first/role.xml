<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.portal.adm.role.mapper.RoleMapper">

    <sql id="paging">
        limit #{offSet}, #{pageSize}
    </sql>
	
	<sql id="searchGroup">
		<if test="searchKey != '' and searchKey == 'ALL' and searchValue != ''">
			and ((upper(auth_id) like concat('%',upper(#{searchValue}),'%')) or (upper(auth_nm) like concat('%',upper(#{searchValue}),'%')))
		</if>
		<if test="searchKey != '' and searchKey == 'authId' and searchValue != ''">
			and (upper(auth_id) like concat('%',upper(#{searchValue}),'%'))
		</if>
		<if test="searchKey != '' and searchKey == 'authNm' and searchValue != ''">
			and (upper(auth_nm) like concat('%',upper(#{searchValue}),'%')) 
		</if>
	</sql>

    <select id="selectList" resultType="com.portal.adm.role.model.RoleModel" parameterType="com.portal.common.paging.Criteria">
        SELECT
			ROW_NUMBER() OVER (
			ORDER BY auth_nm ASC) AS rownum,
			g.auth_id,
			c.company_code,
			g.auth_nm,
			g.auth_dsc,
			g.use_yn,
			g.rgst_id,
			g.rgst_dt,
			g.modi_id,
			g.modi_dt,
			g.auth_cl
		FROM
			t_group_auth g
		JOIN t_company c ON c.company_code = g.company_code
		WHERE 1 = 1
<!-- 			and g.use_yn = 'Y' -->
		<if test="authId != 'au2000001'">
			<if test="companyCode != null and companyCode != ''">
				AND c.company_code = #{companyCode}
				AND g.auth_id != 'au2000001'
			</if>
		</if>
        <include refid="searchGroup"></include>
        order by auth_id ASC
        <include refid="paging"></include>
    </select>

    <select id="selectListCount" resultType="int" parameterType="com.portal.common.paging.Criteria">
        select count(*)
        from
            t_group_auth g
		JOIN t_company c ON c.company_code = g.company_code
        where 1 = 1
<!--             g.use_yn = 'Y' -->
		<if test="authId != 'au2000001'">
			<if test="companyCode != null and companyCode != ''">
				AND c.company_code = #{companyCode}
				AND g.auth_id != 'au2000001'
			</if>
		</if>
		<include refid="searchGroup"></include>
    </select>


    <select id="selectAllList" resultType="com.portal.adm.role.model.RoleModel" parameterType="com.portal.common.paging.Criteria">
        select
            row_number() over (order by auth_id ASC) as rownum,
            auth_id,
            auth_nm,
            auth_dsc,
            use_yn,
            rgst_id,
            rgst_dt,
            modi_id,
            modi_dt,
            auth_cl 
        from
            t_group_auth
        where
            use_yn = 'Y'
   		<if test="authId != 'au2000001' and authId != '' and authId != null">
			<if test="companyCode != null and companyCode != ''">
				AND company_code = #{companyCode}
				AND auth_id != 'au2000001'
			</if>
		</if>
        order by auth_id ASC
    </select>

    <select id="select" resultType="com.portal.adm.role.model.RoleModel" parameterType="com.portal.adm.role.model.RoleModel">
        select
            auth_id,
            auth_nm,
            auth_dsc,
            use_yn,
            rgst_id,
            rgst_dt,
            modi_id,
            modi_dt,
            auth_cl, 
            company_code
        from
            t_group_auth
        where
            auth_id = #{authId}
    </select>

    <insert id="insert" parameterType="com.portal.adm.role.model.RoleModel">
        insert into t_group_auth (
            auth_id
            , company_code
            , auth_nm
            , auth_dsc
            , use_yn
            , rgst_id
            , rgst_dt
            , modi_id
            , modi_dt
            , auth_cl 
        ) values (
            #{authId}
            , #{companyCode}
            , #{authNm}
            , #{authDsc}
            , 'Y'
            , #{rgstId}
            , now()
            , #{modiId}
            , now()
            , #{authCl}
        )
    </insert>

    <update id="update" parameterType="com.portal.adm.role.model.RoleModel">
        update t_group_auth
        set
            auth_nm = #{authNm}
            , auth_dsc = #{authDsc}
            , modi_dt = now()
            , modi_id = #{modiId}
            , use_yn = 'Y'
            , auth_cl = #{authCl} 
        where
            auth_id = #{authId}
    </update>

    <update id="delete" parameterType="com.portal.adm.role.model.RoleModel">
        update t_group_auth
        set
            use_yn = 'N'
        where
            auth_id = #{authId}
    </update>
    
    <select id="selectMgrSysAuthAllList" parameterType="com.portal.adm.role.model.RoleModel" resultType="com.portal.adm.role.model.RoleModel">
        SELECT
			  AUTH_ID
            , AUTH_NM
            , AUTH_DSC
            , USE_YN
            , RGST_ID
            , RGST_DT
            , MODI_ID
            , MODI_DT
            , AUTH_CL
        FROM
            t_group_auth
        WHERE
            USE_YN = 'Y'
        ORDER BY AUTH_ID
    </select>

    <select id="selectMgrSysAuthList" parameterType="com.portal.adm.role.model.RoleModel" resultType="com.portal.adm.role.model.RoleModel">
        SELECT
			  AUTH_ID
            , AUTH_NM
            , AUTH_DSC
            , USE_YN
            , RGST_ID
            , RGST_DT
            , MODI_ID
            , MODI_DT
            , AUTH_CL
        FROM
            t_group_auth
        WHERE
            USE_YN = 'Y'
        ORDER BY AUTH_ID
        <include refid="paging"></include>
    </select>

    <select id="selectMgrSysAuthListCount" parameterType="com.portal.adm.role.model.RoleModel" resultType="int">
        SELECT
			COUNT(1) AS cnt
        FROM
            t_group_auth
        WHERE
            USE_YN = 'Y'
        ORDER BY AUTH_ID
    </select>
    
    <select id="selectMgrSysAuth" parameterType="com.portal.adm.role.model.RoleModel" resultType="com.portal.adm.role.model.RoleModel">
        SELECT
			  AUTH_ID
            , AUTH_NM
            , AUTH_DSC
            , USE_YN
            , RGST_ID
            , RGST_DT
            , MODI_ID
            , MODI_DT
            , AUTH_CL
        FROM
            t_group_auth
        WHERE
            USE_YN = 'Y'
        <if test="authId != null and authId != null">
        	AUTH_ID = #{authId}
        </if>    
    </select>
    
    <insert id="insertMgrSysAuth" parameterType="com.portal.adm.role.model.RoleModel">
        INSERT INTO t_group_auth (
              AUTH_ID
            , AUTH_NM
            , AUTH_DSC  
			, USE_YN
			, RGST_ID
			, RGST_DT
			, MODI_ID
			, MODI_DT 
			, AUTH_CL
        ) VALUES (
              #{authId}
            , #{authNm}
			, #{authDsc}
            , 'Y'
            , #{rgstId}
            , now()
            , #{modiId}
            , now()
            , #{authCl}
        )
    </insert>

    <update id="updateMgrSysAuth" parameterType="com.portal.adm.role.model.RoleModel">
        UPDATE t_group_auth
        SET
			  AUTH_NM = #{authNm}
			, AUTH_DSC = #{authDsc}  
            , USE_YN = 'Y'
            , MODI_ID = #{modiId}
            , MODI_DT = now()
        WHERE
            AUTH_ID = #{authId}
    </update>

    <update id="deleteMgrSysAuth" parameterType="com.portal.adm.role.model.RoleModel">
        UPDATE t_group_auth
        SET
            USE_YN = 'N'
        WHERE AUTH_ID = #{authId}
    </update>
    
    <insert id="insertRoleGroup" parameterType="roleGroupModel">
    	INSER INTO T_ROLE_GROUP(
    		  GROUP_ID
    		, GROUP_NM
    		, USE_YN
    		, RGST_ID
			, RGST_DT
			, MODI_ID
			, MODI_DT
    	)VALUES(
    		#{groupId}
    		, #{groupNm}
    		, #{useYn}
    		, #{rgstId}
    		, NOW()
    		, #{modiId}
    		, NOW()
    	)
    </insert>

    <update id="updateRoleGroup" parameterType="roleGroupModel">
    	UPDATE T_ROLE_GROUP
    	SET GROUP_NM = #{groupNm}
    		, USEYN = #{useYn}
    		, MODI_ID = #{modiId}
    		, MODI_DT = NOW()
    	WHERE GROUP_ID = #{groupId}	
    </update>

    <delete id="deleteRoleGroup" parameterType="roleGroupModel">
 		UPDATE T_ROLE_GROUP
 		SET USE_YN = 'N'
 		WHERE GROUP_ID = #{groupId}
    </delete>
    
    <select id="selectRoleGroupList" parameterType="com.portal.common.paging.Criteria" resultType="roleGroupModel">
    	SELECT
    		  GROUP_ID
    		, GROUP_NM
    		, USE_YN
    		, RGST_ID
			, RGST_DT
			, MODI_ID
			, MODI_DT
		FROM T_ROLE_GROUP
		<where>
			<if test="groupId != null and groupId != ''">
				AND GROUP_ID = #{groupId}
			</if>
			<if test="groupNm != null and groupNm != ''">
				AND UPPER(GROUP_NM) LIKE CONCAT('%',UPPER(#{groupId}),'%')
			</if>
			<if test="useYn != null and useYn != ''">
				AND USE_YN = #{useYn}
			</if>
		</where>
		ORDER BY GROUP_NM
        <include refid="paging"></include>	
    </select>

    <select id="selectRoleGroupListCount" parameterType="com.portal.common.paging.Criteria" resultType="int">
    	SELECT
    		 COUNT(1) AS cnt
		FROM T_ROLE_GROUP
		<where>
			<if test="groupId != null and groupId != ''">
				AND GROUP_ID = #{groupId}
			</if>
			<if test="groupNm != null and groupNm != ''">
				AND UPPER(GROUP_NM) LIKE CONCAT('%',UPPER(#{groupId}),'%')
			</if>
			<if test="useYn != null and useYn != ''">
				AND USE_YN = #{useYn}
			</if>
		</where>
        <include refid="paging"></include>
    </select>

    <select id="selectRoleGroup" parameterType="roleGroupModel" resultType="roleGroupModel">
    	SELECT
    		  GROUP_ID
    		, GROUP_NM
    		, USE_YN
    		, RGST_ID
			, RGST_DT
			, MODI_ID
			, MODI_DT
		FROM T_ROLE_GROUP
		<where>
			<if test="groupId != null and groupId != ''">
				AND GROUP_ID = #{groupId}
			</if>
		</where>
    </select>

    <insert id="insertRoleGroupDtl" parameterType="roleGroupModel">
		INSERT INTO T_ROLE_GROUP_DTL(
			  GROUP_ID
			, REF_ID
			, REF_TY
			, USE_YN
			, RGST_ID
			, RGST_DT
			, MODI_ID
			, MODI_DT
		)VALUES(
			  #{groupId}
			, #{refId}
			, #{refTy}
			, #{useYn}
			, #{rgstId}
    		, NOW()
    		, #{modiId}
    		, NOW()
		)
    </insert>

    <update id="updateRoleGroupDtl" parameterType="roleGroupModel">
		UPDATE T_ROLE_GROUP_DTL
		SET REF_TY = 'refTy'
			, USE_YN = #{useYn}
			, MODI_ID = #{modiId}
    		, MODI_DT = NOW()
    	WHERE GROUP_ID = #{groupId}
    	AND REF_ID = #{refId}	
    </update>

    <delete id="deleteRoleGroupDtl" parameterType="roleGroupModel">
    	UPDATE T_ROLE_GROUP_DTL
		SET USE_YN = 'N'
			, MODI_ID = #{modiId}
    		, MODI_DT = NOW()
    	WHERE GROUP_ID = #{groupId}
    	AND REF_ID = #{refId}
    </delete>
    
    <select id="selectRoleGroupDtlList" parameterType="com.portal.common.paging.Criteria" resultType="roleGroupModel">
		SELECT
			  GD.GROUP_ID
			, GD.REF_ID
			, GD.REF_TY
			, GD.USE_YN
			, GD.RGST_ID
			, GD.RGST_DT
			, GD.MODI_ID
			, GD.MODI_DT
			, U.USER_NM
		FROM T_ROLE_GROUP_DTL GD
		LEFT OUTER JOIN T_USER U
		ON GD.REF_ID = U.USER_ID
		<where>
			<if test="groupId != null and groupId != ''">
				AND GD.GROUP_ID = #{groupId}
			</if>
			<if test="groupNm != null and groupNm != ''">
				AND UPPER(GROUP_NM) LIKE CONCAT('%',UPPER(#{groupId}),'%')
			</if>
			<if test="useYn != null and useYn != ''">
				AND USE_YN = #{useYn}
			</if>
		</where>
		ORDER BY U.USER_NM
		<include refid="paging"></include>
    </select>

    <select id="selectRoleGroupDtlListCount" parameterType="com.portal.common.paging.Criteria" resultType="int">
		SELECT
			  COUNT(1) AS cnt
		FROM T_ROLE_GROUP_DTL GD
		LEFT OUTER JOIN T_USER U
		ON GD.REF_ID = U.USER_ID
		<where>
			<if test="groupId != null and groupId != ''">
				AND GD.GROUP_ID = #{groupId}
			</if>
			<if test="groupNm != null and groupNm != ''">
				AND UPPER(GROUP_NM) LIKE CONCAT('%',UPPER(#{groupId}),'%')
			</if>
			<if test="useYn != null and useYn != ''">
				AND USE_YN = #{useYn}
			</if>
		</where>
    </select>

    <select id="selectRoleGroupDtl" parameterType="roleGroupModel" resultType="roleGroupModel">
    	SELECT
			  GD.GROUP_ID
			, GD.REF_ID
			, GD.REF_TY
			, GD.USE_YN
			, GD.RGST_ID
			, GD.RGST_DT
			, GD.MODI_ID
			, GD.MODI_DT
			, U.USER_NM
		FROM T_ROLE_GROUP_DTL GD
		LEFT OUTER JOIN T_USER U
		ON GD.REF_ID = U.USER_ID
		<where>
			<if test="groupId != null and groupId != ''">
				AND GD.GROUP_ID = #{groupId}
			</if>
			<if test="refId != null and refId != ''">
				AND GD.REF_ID = #{refId}
			</if>
			<if test="useYn != null and useYn != ''">
				AND USE_YN = #{useYn}
			</if>
		</where>
    </select>
</mapper>