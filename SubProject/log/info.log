2021-10-01 16:37:24 INFO [background-preinit] o.h.v.i.u.Version [Version.java:21] [FLOWID:] HV000001: Hibernate Validator 6.1.6.Final
2021-10-01 16:37:24 INFO [restartedMain] c.p.Application [StartupInfoLogger.java:55] [FLOWID:] Starting Application using Java 1.8.0_241 on JinMin-Jang with PID 22692 (C:\Users\JinMin-Jang\git\SubProjsct\SubProject\target\classes started by JinMin-Jang in C:\Users\JinMin-Jang\git\SubProjsct\SubProject)
2021-10-01 16:37:24 DEBUG [restartedMain] c.p.Application [StartupInfoLogger.java:56] [FLOWID:] Running with Spring Boot v2.4.0, Spring v5.3.1
2021-10-01 16:37:24 INFO [restartedMain] c.p.Application [SpringApplication.java:664] [FLOWID:] The following profiles are active: local
2021-10-01 16:37:24 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:255] [FLOWID:] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-10-01 16:37:24 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:255] [FLOWID:] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-10-01 16:37:25 WARN [background-preinit] o.s.h.c.j.Jackson2ObjectMapperBuilder [CompositeLog.java:127] [FLOWID:] For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [EnableEncryptablePropertiesBeanFactoryPostProcessor.java:39] [FLOWID:] Post-processing PropertySource instances
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource Config resource 'classpath:/application.yml' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource Config resource 'classpath:/application.yml' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.EncryptablePropertySourceConverter [EncryptablePropertySourceConverter.java:56] [FLOWID:] Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-10-01 16:37:25 INFO [restartedMain] o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor [DefaultConfiguringBeanFactoryPostProcessor.java:213] [FLOWID:] No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2021-10-01 16:37:25 INFO [restartedMain] o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor [DefaultConfiguringBeanFactoryPostProcessor.java:300] [FLOWID:] No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2021-10-01 16:37:25 INFO [restartedMain] o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor [DefaultConfiguringBeanFactoryPostProcessor.java:460] [FLOWID:] No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2021-10-01 16:37:25 INFO [restartedMain] c.u.j.f.DefaultLazyPropertyFilter [DefaultLazyPropertyFilter.java:31] [FLOWID:] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-10-01 16:37:26 INFO [restartedMain] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:350] [FLOWID:] Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-01 16:37:26 INFO [restartedMain] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:350] [FLOWID:] Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-01 16:37:26 INFO [restartedMain] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:350] [FLOWID:] Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-10-01 16:37:26 INFO [restartedMain] c.u.j.r.DefaultLazyPropertyResolver [DefaultLazyPropertyResolver.java:35] [FLOWID:] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-10-01 16:37:26 INFO [restartedMain] c.u.j.d.DefaultLazyPropertyDetector [DefaultLazyPropertyDetector.java:35] [FLOWID:] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-10-01 16:37:26 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:108] [FLOWID:] Tomcat initialized with port(s): 8081 (http)
2021-10-01 16:37:26 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] [FLOWID:] Initializing ProtocolHandler ["http-nio-8081"]
2021-10-01 16:37:26 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] [FLOWID:] Starting service [Tomcat]
2021-10-01 16:37:26 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] [FLOWID:] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-10-01 16:37:26 INFO [restartedMain] o.a.j.s.TldScanner [DirectJDKLog.java:173] [FLOWID:] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-10-01 16:37:26 INFO [restartedMain] o.a.c.c.C.[.[.[/] [DirectJDKLog.java:173] [FLOWID:] Initializing Spring embedded WebApplicationContext
2021-10-01 16:37:26 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:289] [FLOWID:] Root WebApplicationContext: initialization completed in 1781 ms
2021-10-01 16:37:26 INFO [restartedMain] c.z.h.HikariDataSource [HikariDataSource.java:110] [FLOWID:] HikariPool-1 - Starting...
2021-10-01 16:37:27 INFO [restartedMain] c.z.h.HikariDataSource [HikariDataSource.java:123] [FLOWID:] HikariPool-1 - Start completed.
2021-10-01 16:37:27 INFO [restartedMain] o.a.t.a.TilesAccess [TilesAccess.java:93] [FLOWID:] Publishing TilesContext for context: org.springframework.web.servlet.view.tiles3.SpringWildcardServletTilesApplicationContext
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/css/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/js/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/images/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/font/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/webjars/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/favicon.ico'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/dispatch/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/summernote/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure Ant [pattern='/down/**'] with []
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.w.DefaultSecurityFilterChain [DefaultSecurityFilterChain.java:51] [FLOWID:] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ca18116, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e7a4221, org.springframework.security.web.header.HeaderWriterFilter@3085b088, org.springframework.web.filter.CharacterEncodingFilter@443cdcc2, org.springframework.security.web.authentication.logout.LogoutFilter@1c99fb99, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@615d80e4, org.springframework.security.web.session.ConcurrentSessionFilter@2bb1b7fd, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@76421429, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a26fd8d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23e1036, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22b96b30, org.springframework.security.web.session.SessionManagementFilter@3df54279, org.springframework.security.web.access.ExceptionTranslationFilter@2b24cf27, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5fab8e69]
2021-10-01 16:37:27 INFO [restartedMain] o.s.s.c.ThreadPoolTaskExecutor [ExecutorConfigurationSupport.java:181] [FLOWID:] Initializing ExecutorService 'applicationTaskExecutor'
2021-10-01 16:37:27 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:58] [FLOWID:] Adding welcome page template: index
2021-10-01 16:37:28 INFO [restartedMain] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1220] [FLOWID:] Using default implementation for ThreadExecutor
2021-10-01 16:37:28 INFO [restartedMain] o.q.c.SchedulerSignalerImpl [SchedulerSignalerImpl.java:61] [FLOWID:] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-10-01 16:37:28 INFO [restartedMain] o.q.c.QuartzScheduler [QuartzScheduler.java:229] [FLOWID:] Quartz Scheduler v.2.3.2 created.
2021-10-01 16:37:28 INFO [restartedMain] o.q.s.RAMJobStore [RAMJobStore.java:155] [FLOWID:] RAMJobStore initialized.
2021-10-01 16:37:28 INFO [restartedMain] o.q.c.QuartzScheduler [QuartzScheduler.java:294] [FLOWID:] Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-10-01 16:37:28 INFO [restartedMain] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1374] [FLOWID:] Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-10-01 16:37:28 INFO [restartedMain] o.q.i.StdSchedulerFactory [StdSchedulerFactory.java:1378] [FLOWID:] Quartz scheduler version: 2.3.2
2021-10-01 16:37:28 INFO [restartedMain] o.q.c.QuartzScheduler [QuartzScheduler.java:2293] [FLOWID:] JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@499253a9
2021-10-01 16:37:28 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:58] [FLOWID:] LiveReload server is running on port 35729
2021-10-01 16:37:28 INFO [restartedMain] o.s.s.c.ThreadPoolTaskScheduler [ExecutorConfigurationSupport.java:181] [FLOWID:] Initializing ExecutorService 'taskScheduler'
2021-10-01 16:37:28 INFO [restartedMain] o.s.i.e.EventDrivenConsumer [LogAccessor.java:174] [FLOWID:] Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2021-10-01 16:37:28 INFO [restartedMain] o.s.i.c.PublishSubscribeChannel [LogAccessor.java:174] [FLOWID:] Channel 'application.errorChannel' has 1 subscriber(s).
2021-10-01 16:37:28 INFO [restartedMain] o.s.i.e.EventDrivenConsumer [LogAccessor.java:174] [FLOWID:] started bean '_org.springframework.integration.errorLogger'
2021-10-01 16:37:28 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] [FLOWID:] Starting ProtocolHandler ["http-nio-8081"]
2021-10-01 16:37:28 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:220] [FLOWID:] Tomcat started on port(s): 8081 (http) with context path ''
2021-10-01 16:37:28 INFO [restartedMain] o.s.s.q.SchedulerFactoryBean [SchedulerFactoryBean.java:727] [FLOWID:] Starting Quartz Scheduler now
2021-10-01 16:37:28 INFO [restartedMain] o.q.c.QuartzScheduler [QuartzScheduler.java:547] [FLOWID:] Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-10-01 16:37:28 INFO [restartedMain] c.p.Application [StartupInfoLogger.java:61] [FLOWID:] Started Application in 4.137 seconds (JVM running for 5.079)
2021-10-01 16:37:51 INFO [http-nio-8081-exec-1] o.a.c.c.C.[.[.[/] [DirectJDKLog.java:173] [FLOWID:] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-10-01 16:37:51 INFO [http-nio-8081-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:525] [FLOWID:] Initializing Servlet 'dispatcherServlet'
2021-10-01 16:37:51 INFO [http-nio-8081-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:547] [FLOWID:] Completed initialization in 1 ms
2021-10-01 16:37:51 DEBUG [http-nio-8081-exec-1] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:51 DEBUG [http-nio-8081-exec-1] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /admin/menuAuth(String)
2021-10-01 16:37:51 DEBUG [http-nio-8081-exec-1] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:51 DEBUG [http-nio-8081-exec-1] c.p.c.s.AuthChecker [AuthChecker.java:77] [FLOWID:] MenuModel(upMenuId=mn5000002, menuId=mn5000004, menuNm=메뉴 권한 관리, menuUrl=/admin/menuAuth, menuDsc=, ordSeq=4, menuSe=M, rgstId=SYSTEM, rgstDt=2021-09-30T14:23:54, modiId=SYSTEM, modiDt=2021-09-30T14:23:54, useYn=Y, menuAttr={"attr":{"insert":true,"update":true,"detail":true,"delete":true}}, lv=2, fullPathId=["mn5000001","mn5000002","mn5000004"], fullPathNm=["HOME","Admin","메뉴 권한 관리"], fullOrdSeq=00001-00002-00004, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 16:37:51 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:51 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 11
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.r.m.R.selectList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: select row_number() over (order by auth_nm ASC) as rownum, auth_id, auth_nm, auth_dsc, use_yn, rgst_id, rgst_dt, modi_id, modi_dt, auth_cl from t_group_auth where use_yn = 'Y' order by auth_id ASC limit ?, ?
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.r.m.R.selectList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 0(Integer), 10(Integer)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.r.m.R.selectList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 7
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: select row_number() over (order by ord_seq ASC) as rownum, group_id, code_id, code_nm, code_dsc, use_yn, rgst_id, rgst_dt, modi_id, modi_dt, ord_seq from t_code where group_id = ? order by rownum
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: COMPANY_CODE(String)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 4
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: select row_number() over (order by ord_seq ASC) as rownum, group_id, code_id, code_nm, code_dsc, use_yn, rgst_id, rgst_dt, modi_id, modi_dt, ord_seq from t_code where group_id = ? order by rownum
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: USE_YN(String)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 2
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: select row_number() over (order by ord_seq ASC) as rownum, group_id, code_id, code_nm, code_dsc, use_yn, rgst_id, rgst_dt, modi_id, modi_dt, ord_seq from t_code where group_id = ? order by rownum
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: USER_SEARCH_CODE(String)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectGroupIdAllList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 3
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.r.m.R.selectAllList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: select row_number() over (order by auth_id ASC) as rownum, auth_id, auth_nm, auth_dsc, use_yn, rgst_id, rgst_dt, modi_id, modi_dt, auth_cl from t_group_auth where use_yn = 'Y' order by auth_id ASC
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.r.m.R.selectAllList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.r.m.R.selectAllList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 7
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.d.m.D.selectDeptClList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.DEPT_CODE, M.UP_DEPT_CODE, M.DEPT_NM, M.ORD_SEQ, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.DEPT_CODE as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.DEPT_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ , concat(cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)), M.DEPT_NM) AS FULL_PATH_ORD FROM T_DEPT_CL M WHERE M.UP_DEPT_CODE = 'Top' AND M.USE_YN = 'Y' UNION ALL SELECT M.DEPT_CODE, M.UP_DEPT_CODE, M.DEPT_NM, M.ORD_SEQ, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.DEPT_CODE) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.DEPT_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ , CONCAT(R.FULL_PATH_ORD,LPAD(M.ORD_SEQ,5,'0'),M.DEPT_NM) AS FULL_PATH_ORD FROM R JOIN T_DEPT_CL M ON R.DEPT_CODE = M.UP_DEPT_CODE AND M.USE_YN = 'Y' ) SELECT DEPT_CODE, UP_DEPT_CODE, DEPT_NM, ORD_SEQ, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ , R.FULL_PATH_ORD FROM R ORDER BY FULL_PATH_ORD
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.d.m.D.selectDeptClList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.d.m.D.selectDeptClList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 7
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectMemberList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: select row_number() over () as rownum, u.user_id, u.user_nm, u.pstn_code, p.pstn_nm, u.dept_code, d.dept_nm, u.company_code, (select code_nm from t_code where group_id = 'COMPANY_CODE' and code_id = u.company_code) company_nm, u.adof_dept_code, ad.dept_nm as adof_dept_nm, r.auth_id, r.use_yn as auth_use_yn, a.auth_nm, u.use_yn, u.last_log_dt, case when coalesce(to_days(last_log_dt), to_days(now())) + (SELECT CODE_NM FROM T_CODE WHERE GROUP_ID = 'ACCOUNT_LOCK_PD' AND CODE_ID = 'LOCK_PD') < to_days(now()) then 'Y' else 'N' end as lock_yn, u.start_dt, u.end_dt, 'N' as expired_yn, u.rgst_id, u.rgst_dt, u.modi_id, u.modi_dt, u.file_url, COALESCE(tgm.USE_YN,'N') AS MGR_YN, tga.AUTH_ID AS MGR_AUTH_ID, tga.AUTH_NM AS MGR_AUTH_NM, u.dt_limit_yn from t_user u left outer join t_pstn p on u.pstn_code = p.pstn_code left outer join t_dept d on u.dept_code = d.dept_code left outer join t_hdept h on u.hdept_code = h.hdept_code left outer join t_dept ad on u.adof_dept_code = ad.dept_code left outer join t_user_auth r on u.user_id = r.user_id left outer join t_user_sys_auth a on r.auth_id = a.auth_id left outer join t_group tgm on u.user_id = tgm.user_id left outer join t_group_auth tga on tgm.auth_id = tga.auth_id limit ?, ?
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectMemberList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 0(Integer), 10(Integer)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectMemberList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 10
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectMemberListCount [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: select count(*) from t_user u left outer join t_pstn p on u.pstn_code = p.pstn_code left outer join t_dept d on u.dept_code = d.dept_code left outer join t_hdept h on u.hdept_code = h.hdept_code left outer join t_dept ad on u.adof_dept_code = ad.dept_code left outer join t_user_auth r on u.user_id = r.user_id left outer join t_user_sys_auth a on r.auth_id = a.auth_id left outer join t_group tgm on u.user_id = tgm.user_id left outer join t_group_auth tga on tgm.auth_id = tga.auth_id
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectMemberListCount [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectMemberListCount [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:52 INFO [http-nio-8081-exec-1] c.p.c.l.LoggerAspect [LoggerAspect.java:98] [FLOWID:] params : {msg={}, method_nm=menu, user_info=MemberModel(rownum=null, userId=jinix55, userNm=장진민, pstnCode=null, pstnNm=null, deptCode=null, deptNm=null, hdeptCode=null, companyCode=null, companyNm=null, adofDeptCode=null, adofDeptNm=null, dutySe=null, authId=au2000001, authCl=null, authUseYn=Y, authNm=최고 관리자, useYn=Y, modiSe=I, lastLogDt=2021-09-30T16:23:09, startDt=2021-09-01T16:01:51, endDt=2021-09-01T16:01:51, rgstId=null, rgstDt=null, modiId=null, modiDt=null, expiredYn=N, lockYn=N, mgrYn=Y, fileId=null, fileUrl=null, clientIp=0:0:0:0:0:0:0:1, mgrSysEnv=null, userSysEnv=null, bfDeptCode=null, deptUpdtDt=2021-09-30T16:01:51, userSysHome=null, mgrAuthId=null, mgrAuthNm=null, userAuthChage=null, mgrAuthChange=null, dtLimitYn=null, password=null, newPassword=null, passError=0, PassInit=null), server_ip=192.168.56.1 / 172.20.10.6, controller_nm=MenuAuthController, client_ip=0:0:0:0:0:0:0:1, rqst_uri=/admin/menuAuth, rqst_method=GET}
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: insert into t_log_rqst_mgr_sys ( log_dt , user_id , user_nm , pstn_code , pstn_nm , dept_code , dept_nm , auth_id , auth_nm , client_ip , server_ip , rqst_method , rqst_uri , program_nm , controller_nm , method_nm , msg ) values ( NOW() , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: jinix55(String), 장진민(String), null, null, null, null, au2000001(String), 최고 관리자(String), 0:0:0:0:0:0:0:1(String), 192.168.56.1 / 172.20.10.6(String), GET(String), /admin/menuAuth(String), WEB(String), MenuAuthController(String), menu(String), {}(String)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] <==    Updates: 1
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.MENU_SE = 'M' UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' ) SELECT UP_MENU_ID FROM R WHERE LV > 0 AND MENU_URL = ? ORDER BY FULL_ORD_SEQ DESC, MENU_NM LIMIT 1
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: /admin/menuAuth(String)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE UP_MENU_ID IS NOT NULL ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 10
2021-10-01 16:37:52 INFO [http-nio-8081-exec-1] c.p.c.i.MenuCheckInterceptor [MenuCheckInterceptor.java:59] [FLOWID:] subMenuList : MenuModel(upMenuId=mn5000001, menuId=mn5000002, menuNm=Admin, menuUrl=/admin, menuDsc=, ordSeq=2, menuSe=M, rgstId=SYSTEM, rgstDt=2021-09-30T14:23:54, modiId=SYSTEM, modiDt=2021-09-30T14:23:54, useYn=Y, menuAttr={"attr":{"insert":true,"update":true,"detail":true,"delete":true}}, lv=1, fullPathId=["mn5000001","mn5000002"], fullPathNm=["HOME","Admin"], fullOrdSeq=00001-00002, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE LV = 1 ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 16:37:52 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /admin/company(String)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.c.s.AuthChecker [AuthChecker.java:77] [FLOWID:] MenuModel(upMenuId=mn5000002, menuId=mn5000011, menuNm=회사 관리, menuUrl=/admin/company, menuDsc=회사 관리, ordSeq=11, menuSe=M, rgstId=jinix55, rgstDt=2021-10-01T13:29:42, modiId=jinix55, modiDt=2021-10-01T13:29:58, useYn=Y, menuAttr={}, lv=2, fullPathId=["mn5000001","mn5000002","mn5000011"], fullPathNm=["HOME","Admin","회사 관리"], fullOrdSeq=00001-00002-00011, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 16:37:56 INFO [http-nio-8081-exec-2] c.p.a.c.CompanyController [CompanyController.java:47] [FLOWID:]  =============== company get in ==============
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT ROW_NUMBER() OVER (ORDER BY UPPER(MODI_DT) ASC) AS ROWNUM , COMPANY_ID , COMPANY_CODE , COMPANY_NO , COMPANY_NM , COMPANY_DSC , ADDRESS , TELEPHONE_NO , REPRESENTATIVE_NM , NOTE , USE_YN , RGST_ID , RGST_DT , MODI_ID , MODI_DT FROM T_COMPANY ORDER BY ROWNUM ASC limit ?, ?
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 0(Integer), 10(Integer)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 0
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT count(1) FROM T_COMPANY
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:56 INFO [http-nio-8081-exec-2] c.p.c.l.LoggerAspect [LoggerAspect.java:98] [FLOWID:] params : {msg={}, method_nm=company, user_info=MemberModel(rownum=null, userId=jinix55, userNm=장진민, pstnCode=null, pstnNm=null, deptCode=null, deptNm=null, hdeptCode=null, companyCode=null, companyNm=null, adofDeptCode=null, adofDeptNm=null, dutySe=null, authId=au2000001, authCl=null, authUseYn=Y, authNm=최고 관리자, useYn=Y, modiSe=I, lastLogDt=2021-09-30T16:23:09, startDt=2021-09-01T16:01:51, endDt=2021-09-01T16:01:51, rgstId=null, rgstDt=null, modiId=null, modiDt=null, expiredYn=N, lockYn=N, mgrYn=Y, fileId=null, fileUrl=null, clientIp=0:0:0:0:0:0:0:1, mgrSysEnv=null, userSysEnv=null, bfDeptCode=null, deptUpdtDt=2021-09-30T16:01:51, userSysHome=null, mgrAuthId=null, mgrAuthNm=null, userAuthChage=null, mgrAuthChange=null, dtLimitYn=null, password=null, newPassword=null, passError=0, PassInit=null), server_ip=192.168.56.1 / 172.20.10.6, controller_nm=CompanyController, client_ip=0:0:0:0:0:0:0:1, rqst_uri=/admin/company, rqst_method=GET}
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: insert into t_log_rqst_mgr_sys ( log_dt , user_id , user_nm , pstn_code , pstn_nm , dept_code , dept_nm , auth_id , auth_nm , client_ip , server_ip , rqst_method , rqst_uri , program_nm , controller_nm , method_nm , msg ) values ( NOW() , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: jinix55(String), 장진민(String), null, null, null, null, au2000001(String), 최고 관리자(String), 0:0:0:0:0:0:0:1(String), 192.168.56.1 / 172.20.10.6(String), GET(String), /admin/company(String), WEB(String), CompanyController(String), company(String), {}(String)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] <==    Updates: 1
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.MENU_SE = 'M' UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' ) SELECT UP_MENU_ID FROM R WHERE LV > 0 AND MENU_URL = ? ORDER BY FULL_ORD_SEQ DESC, MENU_NM LIMIT 1
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: /admin/company(String)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE UP_MENU_ID IS NOT NULL ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 10
2021-10-01 16:37:56 INFO [http-nio-8081-exec-2] c.p.c.i.MenuCheckInterceptor [MenuCheckInterceptor.java:59] [FLOWID:] subMenuList : MenuModel(upMenuId=mn5000001, menuId=mn5000002, menuNm=Admin, menuUrl=/admin, menuDsc=, ordSeq=2, menuSe=M, rgstId=SYSTEM, rgstDt=2021-09-30T14:23:54, modiId=SYSTEM, modiDt=2021-09-30T14:23:54, useYn=Y, menuAttr={"attr":{"insert":true,"update":true,"detail":true,"delete":true}}, lv=1, fullPathId=["mn5000001","mn5000002"], fullPathNm=["HOME","Admin"], fullOrdSeq=00001-00002, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE LV = 1 ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-9] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-9] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /error(String)
2021-10-01 16:37:56 DEBUG [http-nio-8081-exec-9] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 0
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /admin/company(String)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.c.s.AuthChecker [AuthChecker.java:77] [FLOWID:] MenuModel(upMenuId=mn5000002, menuId=mn5000011, menuNm=회사 관리, menuUrl=/admin/company, menuDsc=회사 관리, ordSeq=11, menuSe=M, rgstId=jinix55, rgstDt=2021-10-01T13:29:42, modiId=jinix55, modiDt=2021-10-01T13:29:58, useYn=Y, menuAttr={}, lv=2, fullPathId=["mn5000001","mn5000002","mn5000011"], fullPathNm=["HOME","Admin","회사 관리"], fullOrdSeq=00001-00002-00011, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:12:03 INFO [http-nio-8081-exec-2] c.p.a.c.CompanyController [CompanyController.java:47] [FLOWID:]  =============== company get in ==============
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT ROW_NUMBER() OVER (ORDER BY UPPER(MODI_DT) ASC) AS ROWNUM , COMPANY_ID , COMPANY_CODE , COMPANY_NO , COMPANY_NM , COMPANY_DSC , ADDRESS , TELEPHONE_NO , REPRESENTATIVE_NM , NOTE , USE_YN , RGST_ID , RGST_DT , MODI_ID , MODI_DT FROM T_COMPANY ORDER BY ROWNUM ASC limit ?, ?
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 0(Integer), 10(Integer)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 3
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT count(1) FROM T_COMPANY
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:12:03 INFO [http-nio-8081-exec-2] c.p.c.l.LoggerAspect [LoggerAspect.java:98] [FLOWID:] params : {msg={}, method_nm=company, user_info=MemberModel(rownum=null, userId=jinix55, userNm=장진민, pstnCode=null, pstnNm=null, deptCode=null, deptNm=null, hdeptCode=null, companyCode=null, companyNm=null, adofDeptCode=null, adofDeptNm=null, dutySe=null, authId=au2000001, authCl=null, authUseYn=Y, authNm=최고 관리자, useYn=Y, modiSe=I, lastLogDt=2021-09-30T16:23:09, startDt=2021-09-01T16:01:51, endDt=2021-09-01T16:01:51, rgstId=null, rgstDt=null, modiId=null, modiDt=null, expiredYn=N, lockYn=N, mgrYn=Y, fileId=null, fileUrl=null, clientIp=0:0:0:0:0:0:0:1, mgrSysEnv=null, userSysEnv=null, bfDeptCode=null, deptUpdtDt=2021-09-30T16:01:51, userSysHome=null, mgrAuthId=null, mgrAuthNm=null, userAuthChage=null, mgrAuthChange=null, dtLimitYn=null, password=null, newPassword=null, passError=0, PassInit=null), server_ip=192.168.56.1 / 172.20.10.6, controller_nm=CompanyController, client_ip=0:0:0:0:0:0:0:1, rqst_uri=/admin/company, rqst_method=GET}
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: insert into t_log_rqst_mgr_sys ( log_dt , user_id , user_nm , pstn_code , pstn_nm , dept_code , dept_nm , auth_id , auth_nm , client_ip , server_ip , rqst_method , rqst_uri , program_nm , controller_nm , method_nm , msg ) values ( NOW() , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: jinix55(String), 장진민(String), null, null, null, null, au2000001(String), 최고 관리자(String), 0:0:0:0:0:0:0:1(String), 192.168.56.1 / 172.20.10.6(String), GET(String), /admin/company(String), WEB(String), CompanyController(String), company(String), {}(String)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] <==    Updates: 1
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.MENU_SE = 'M' UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' ) SELECT UP_MENU_ID FROM R WHERE LV > 0 AND MENU_URL = ? ORDER BY FULL_ORD_SEQ DESC, MENU_NM LIMIT 1
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: /admin/company(String)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE UP_MENU_ID IS NOT NULL ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 10
2021-10-01 17:12:03 INFO [http-nio-8081-exec-2] c.p.c.i.MenuCheckInterceptor [MenuCheckInterceptor.java:59] [FLOWID:] subMenuList : MenuModel(upMenuId=mn5000001, menuId=mn5000002, menuNm=Admin, menuUrl=/admin, menuDsc=, ordSeq=2, menuSe=M, rgstId=SYSTEM, rgstDt=2021-09-30T14:23:54, modiId=SYSTEM, modiDt=2021-09-30T14:23:54, useYn=Y, menuAttr={"attr":{"insert":true,"update":true,"detail":true,"delete":true}}, lv=1, fullPathId=["mn5000001","mn5000002"], fullPathNm=["HOME","Admin"], fullOrdSeq=00001-00002, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE LV = 1 ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:12:03 ERROR [http-nio-8081-exec-2] o.a.c.c.C.[.[.[.[jsp] [DirectJDKLog.java:175] [FLOWID:] Servlet.service() for servlet [jsp] threw exception
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'restDt' cannot be found on object of type 'com.portal.adm.company.model.CompanyModel' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:308)
	at org.springframework.web.servlet.tags.EvalTag.doEndTag(EvalTag.java:177)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_spring_005feval_005f0(company_jsp.java:732)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fforEach_005f0(company_jsp.java:539)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fwhen_005f0(company_jsp.java:469)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fchoose_005f0(company_jsp.java:428)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspService(company_jsp.java:201)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$SessionCommittingRequestDispatcher.include(SessionRepositoryFilter.java:413)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:177)
	at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:954)
	at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:496)
	at org.apache.tiles.request.jsp.JspRequest.doInclude(JspRequest.java:123)
	at org.apache.tiles.request.AbstractViewRequest.dispatch(AbstractViewRequest.java:47)
	at org.apache.tiles.request.render.DispatchRenderer.render(DispatchRenderer.java:47)
	at org.apache.tiles.request.render.ChainedDelegateRenderer.render(ChainedDelegateRenderer.java:68)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:259)
	at org.apache.tiles.template.InsertAttributeModel.renderAttribute(InsertAttributeModel.java:188)
	at org.apache.tiles.template.InsertAttributeModel.execute(InsertAttributeModel.java:132)
	at org.apache.tiles.jsp.taglib.InsertAttributeTag.doTag(InsertAttributeTag.java:299)
	at org.apache.jsp.WEB_002dINF.views.layout.base_jsp._jspx_meth_tiles_005finsertAttribute_005f4(base_jsp.java:267)
	at org.apache.jsp.WEB_002dINF.views.layout.base_jsp._jspService(base_jsp.java:156)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$SessionCommittingRequestDispatcher.forward(SessionRepositoryFilter.java:407)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171)
	at org.apache.tiles.request.servlet.ServletRequest.forward(ServletRequest.java:265)
	at org.apache.tiles.request.servlet.ServletRequest.doForward(ServletRequest.java:228)
	at org.apache.tiles.request.AbstractClientRequest.dispatch(AbstractClientRequest.java:57)
	at org.apache.tiles.request.render.DispatchRenderer.render(DispatchRenderer.java:47)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:259)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:397)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:238)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:221)
	at org.apache.tiles.renderer.DefinitionRenderer.render(DefinitionRenderer.java:59)
	at org.springframework.web.servlet.view.tiles3.TilesView.renderMergedOutputModel(TilesView.java:147)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:147)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:125)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-10-01 17:12:03 ERROR [http-nio-8081-exec-2] o.a.c.c.C.[.[.[.[jsp] [DirectJDKLog.java:175] [FLOWID:] Servlet.service() for servlet [jsp] threw exception
java.io.IOException: An exception occurred processing [/WEB-INF/views/layout/base.jsp] at line [17]

14: <tiles:insertAttribute name="gnb" />
15: <tiles:insertAttribute name="nav" />
16: <div class="container">
17:     <tiles:insertAttribute name="body" />
18: </div>
19: <tiles:insertAttribute name="footer"/> <!-- /WEB-INF/views/layout/footer.jsp -->
20: </body>


Stacktrace:
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:505)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$SessionCommittingRequestDispatcher.forward(SessionRepositoryFilter.java:407)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171)
	at org.apache.tiles.request.servlet.ServletRequest.forward(ServletRequest.java:265)
	at org.apache.tiles.request.servlet.ServletRequest.doForward(ServletRequest.java:228)
	at org.apache.tiles.request.AbstractClientRequest.dispatch(AbstractClientRequest.java:57)
	at org.apache.tiles.request.render.DispatchRenderer.render(DispatchRenderer.java:47)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:259)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:397)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:238)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:221)
	at org.apache.tiles.renderer.DefinitionRenderer.render(DefinitionRenderer.java:59)
	at org.springframework.web.servlet.view.tiles3.TilesView.renderMergedOutputModel(TilesView.java:147)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:147)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:125)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: JSPException including path '/WEB-INF/views/company/company.jsp'.
	at org.apache.tiles.request.servlet.ServletUtil.wrapServletException(ServletUtil.java:61)
	at org.apache.tiles.request.jsp.JspRequest.doInclude(JspRequest.java:125)
	at org.apache.tiles.request.AbstractViewRequest.dispatch(AbstractViewRequest.java:47)
	at org.apache.tiles.request.render.DispatchRenderer.render(DispatchRenderer.java:47)
	at org.apache.tiles.request.render.ChainedDelegateRenderer.render(ChainedDelegateRenderer.java:68)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:259)
	at org.apache.tiles.template.InsertAttributeModel.renderAttribute(InsertAttributeModel.java:188)
	at org.apache.tiles.template.InsertAttributeModel.execute(InsertAttributeModel.java:132)
	at org.apache.tiles.jsp.taglib.InsertAttributeTag.doTag(InsertAttributeTag.java:299)
	at org.apache.jsp.WEB_002dINF.views.layout.base_jsp._jspx_meth_tiles_005finsertAttribute_005f4(base_jsp.java:267)
	at org.apache.jsp.WEB_002dINF.views.layout.base_jsp._jspService(base_jsp.java:156)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 127 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'restDt' cannot be found on object of type 'com.portal.adm.company.model.CompanyModel' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:308)
	at org.springframework.web.servlet.tags.EvalTag.doEndTag(EvalTag.java:177)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_spring_005feval_005f0(company_jsp.java:732)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fforEach_005f0(company_jsp.java:539)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fwhen_005f0(company_jsp.java:469)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fchoose_005f0(company_jsp.java:428)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspService(company_jsp.java:201)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$SessionCommittingRequestDispatcher.include(SessionRepositoryFilter.java:413)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:177)
	at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:954)
	at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:496)
	at org.apache.tiles.request.jsp.JspRequest.doInclude(JspRequest.java:123)
	... 139 common frames omitted
2021-10-01 17:12:03 ERROR [http-nio-8081-exec-2] o.a.c.c.C.[.[.[.[dispatcherServlet] [DirectJDKLog.java:175] [FLOWID:] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.tiles.request.render.CannotRenderException: An exception occurred processing [/WEB-INF/views/layout/base.jsp] at line [17]

14: <tiles:insertAttribute name="gnb" />
15: <tiles:insertAttribute name="nav" />
16: <div class="container">
17:     <tiles:insertAttribute name="body" />
18: </div>
19: <tiles:insertAttribute name="footer"/> <!-- /WEB-INF/views/layout/footer.jsp -->
20: </body>


Stacktrace:] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'restDt' cannot be found on object of type 'com.portal.adm.company.model.CompanyModel' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:308)
	at org.springframework.web.servlet.tags.EvalTag.doEndTag(EvalTag.java:177)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_spring_005feval_005f0(company_jsp.java:732)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fforEach_005f0(company_jsp.java:539)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fwhen_005f0(company_jsp.java:469)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspx_meth_c_005fchoose_005f0(company_jsp.java:428)
	at org.apache.jsp.WEB_002dINF.views.company.company_jsp._jspService(company_jsp.java:201)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$SessionCommittingRequestDispatcher.include(SessionRepositoryFilter.java:413)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:177)
	at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:954)
	at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:496)
	at org.apache.tiles.request.jsp.JspRequest.doInclude(JspRequest.java:123)
	at org.apache.tiles.request.AbstractViewRequest.dispatch(AbstractViewRequest.java:47)
	at org.apache.tiles.request.render.DispatchRenderer.render(DispatchRenderer.java:47)
	at org.apache.tiles.request.render.ChainedDelegateRenderer.render(ChainedDelegateRenderer.java:68)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:259)
	at org.apache.tiles.template.InsertAttributeModel.renderAttribute(InsertAttributeModel.java:188)
	at org.apache.tiles.template.InsertAttributeModel.execute(InsertAttributeModel.java:132)
	at org.apache.tiles.jsp.taglib.InsertAttributeTag.doTag(InsertAttributeTag.java:299)
	at org.apache.jsp.WEB_002dINF.views.layout.base_jsp._jspx_meth_tiles_005finsertAttribute_005f4(base_jsp.java:267)
	at org.apache.jsp.WEB_002dINF.views.layout.base_jsp._jspService(base_jsp.java:156)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$SessionCommittingRequestDispatcher.forward(SessionRepositoryFilter.java:407)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171)
	at org.apache.tiles.request.servlet.ServletRequest.forward(ServletRequest.java:265)
	at org.apache.tiles.request.servlet.ServletRequest.doForward(ServletRequest.java:228)
	at org.apache.tiles.request.AbstractClientRequest.dispatch(AbstractClientRequest.java:57)
	at org.apache.tiles.request.render.DispatchRenderer.render(DispatchRenderer.java:47)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:259)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:397)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:238)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:221)
	at org.apache.tiles.renderer.DefinitionRenderer.render(DefinitionRenderer.java:59)
	at org.springframework.web.servlet.view.tiles3.TilesView.renderMergedOutputModel(TilesView.java:147)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:147)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:125)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:141)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE LV = 1 ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:12:03 DEBUG [http-nio-8081-exec-2] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /admin/company(String)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.c.s.AuthChecker [AuthChecker.java:77] [FLOWID:] MenuModel(upMenuId=mn5000002, menuId=mn5000011, menuNm=회사 관리, menuUrl=/admin/company, menuDsc=회사 관리, ordSeq=11, menuSe=M, rgstId=jinix55, rgstDt=2021-10-01T13:29:42, modiId=jinix55, modiDt=2021-10-01T13:29:58, useYn=Y, menuAttr={}, lv=2, fullPathId=["mn5000001","mn5000002","mn5000011"], fullPathNm=["HOME","Admin","회사 관리"], fullOrdSeq=00001-00002-00011, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:13:12 INFO [http-nio-8081-exec-1] c.p.a.c.CompanyController [CompanyController.java:47] [FLOWID:]  =============== company get in ==============
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT ROW_NUMBER() OVER (ORDER BY UPPER(MODI_DT) ASC) AS ROWNUM , COMPANY_ID , COMPANY_CODE , COMPANY_NO , COMPANY_NM , COMPANY_DSC , ADDRESS , TELEPHONE_NO , REPRESENTATIVE_NM , NOTE , USE_YN , RGST_ID , RGST_DT , MODI_ID , MODI_DT FROM T_COMPANY ORDER BY ROWNUM ASC limit ?, ?
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 0(Integer), 10(Integer)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 3
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT count(1) FROM T_COMPANY
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:13:12 INFO [http-nio-8081-exec-1] c.p.c.l.LoggerAspect [LoggerAspect.java:98] [FLOWID:] params : {msg={}, method_nm=company, user_info=MemberModel(rownum=null, userId=jinix55, userNm=장진민, pstnCode=null, pstnNm=null, deptCode=null, deptNm=null, hdeptCode=null, companyCode=null, companyNm=null, adofDeptCode=null, adofDeptNm=null, dutySe=null, authId=au2000001, authCl=null, authUseYn=Y, authNm=최고 관리자, useYn=Y, modiSe=I, lastLogDt=2021-09-30T16:23:09, startDt=2021-09-01T16:01:51, endDt=2021-09-01T16:01:51, rgstId=null, rgstDt=null, modiId=null, modiDt=null, expiredYn=N, lockYn=N, mgrYn=Y, fileId=null, fileUrl=null, clientIp=0:0:0:0:0:0:0:1, mgrSysEnv=null, userSysEnv=null, bfDeptCode=null, deptUpdtDt=2021-09-30T16:01:51, userSysHome=null, mgrAuthId=null, mgrAuthNm=null, userAuthChage=null, mgrAuthChange=null, dtLimitYn=null, password=null, newPassword=null, passError=0, PassInit=null), server_ip=192.168.56.1 / 172.20.10.6, controller_nm=CompanyController, client_ip=0:0:0:0:0:0:0:1, rqst_uri=/admin/company, rqst_method=GET}
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: insert into t_log_rqst_mgr_sys ( log_dt , user_id , user_nm , pstn_code , pstn_nm , dept_code , dept_nm , auth_id , auth_nm , client_ip , server_ip , rqst_method , rqst_uri , program_nm , controller_nm , method_nm , msg ) values ( NOW() , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: jinix55(String), 장진민(String), null, null, null, null, au2000001(String), 최고 관리자(String), 0:0:0:0:0:0:0:1(String), 192.168.56.1 / 172.20.10.6(String), GET(String), /admin/company(String), WEB(String), CompanyController(String), company(String), {}(String)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] <==    Updates: 1
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.MENU_SE = 'M' UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' ) SELECT UP_MENU_ID FROM R WHERE LV > 0 AND MENU_URL = ? ORDER BY FULL_ORD_SEQ DESC, MENU_NM LIMIT 1
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: /admin/company(String)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE UP_MENU_ID IS NOT NULL ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 10
2021-10-01 17:13:12 INFO [http-nio-8081-exec-1] c.p.c.i.MenuCheckInterceptor [MenuCheckInterceptor.java:59] [FLOWID:] subMenuList : MenuModel(upMenuId=mn5000001, menuId=mn5000002, menuNm=Admin, menuUrl=/admin, menuDsc=, ordSeq=2, menuSe=M, rgstId=SYSTEM, rgstDt=2021-09-30T14:23:54, modiId=SYSTEM, modiDt=2021-09-30T14:23:54, useYn=Y, menuAttr={"attr":{"insert":true,"update":true,"detail":true,"delete":true}}, lv=1, fullPathId=["mn5000001","mn5000002"], fullPathNm=["HOME","Admin"], fullOrdSeq=00001-00002, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE LV = 1 ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-1] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-9] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-9] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /error(String)
2021-10-01 17:13:12 DEBUG [http-nio-8081-exec-9] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 0
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /admin/company(String)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.c.s.AuthChecker [AuthChecker.java:77] [FLOWID:] MenuModel(upMenuId=mn5000002, menuId=mn5000011, menuNm=회사 관리, menuUrl=/admin/company, menuDsc=회사 관리, ordSeq=11, menuSe=M, rgstId=jinix55, rgstDt=2021-10-01T13:29:42, modiId=jinix55, modiDt=2021-10-01T13:29:58, useYn=Y, menuAttr={}, lv=2, fullPathId=["mn5000001","mn5000002","mn5000011"], fullPathNm=["HOME","Admin","회사 관리"], fullOrdSeq=00001-00002-00011, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:18:28 INFO [http-nio-8081-exec-6] c.p.a.c.CompanyController [CompanyController.java:47] [FLOWID:]  =============== company get in ==============
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT ROW_NUMBER() OVER (ORDER BY UPPER(MODI_DT) ASC) AS ROWNUM , COMPANY_ID , COMPANY_CODE , COMPANY_NO , COMPANY_NM , COMPANY_DSC , ADDRESS , TELEPHONE_NO , REPRESENTATIVE_NM , NOTE , USE_YN , RGST_ID , RGST_DT , MODI_ID , MODI_DT FROM T_COMPANY ORDER BY ROWNUM ASC limit ?, ?
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 0(Integer), 10(Integer)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 3
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT count(1) FROM T_COMPANY
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:28 INFO [http-nio-8081-exec-6] c.p.c.l.LoggerAspect [LoggerAspect.java:98] [FLOWID:] params : {msg={}, method_nm=company, user_info=MemberModel(rownum=null, userId=jinix55, userNm=장진민, pstnCode=null, pstnNm=null, deptCode=null, deptNm=null, hdeptCode=null, companyCode=null, companyNm=null, adofDeptCode=null, adofDeptNm=null, dutySe=null, authId=au2000001, authCl=null, authUseYn=Y, authNm=최고 관리자, useYn=Y, modiSe=I, lastLogDt=2021-09-30T16:23:09, startDt=2021-09-01T16:01:51, endDt=2021-09-01T16:01:51, rgstId=null, rgstDt=null, modiId=null, modiDt=null, expiredYn=N, lockYn=N, mgrYn=Y, fileId=null, fileUrl=null, clientIp=0:0:0:0:0:0:0:1, mgrSysEnv=null, userSysEnv=null, bfDeptCode=null, deptUpdtDt=2021-09-30T16:01:51, userSysHome=null, mgrAuthId=null, mgrAuthNm=null, userAuthChage=null, mgrAuthChange=null, dtLimitYn=null, password=null, newPassword=null, passError=0, PassInit=null), server_ip=192.168.56.1 / 172.20.10.6, controller_nm=CompanyController, client_ip=0:0:0:0:0:0:0:1, rqst_uri=/admin/company, rqst_method=GET}
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: insert into t_log_rqst_mgr_sys ( log_dt , user_id , user_nm , pstn_code , pstn_nm , dept_code , dept_nm , auth_id , auth_nm , client_ip , server_ip , rqst_method , rqst_uri , program_nm , controller_nm , method_nm , msg ) values ( NOW() , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: jinix55(String), 장진민(String), null, null, null, null, au2000001(String), 최고 관리자(String), 0:0:0:0:0:0:0:1(String), 192.168.56.1 / 172.20.10.6(String), GET(String), /admin/company(String), WEB(String), CompanyController(String), company(String), {}(String)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] <==    Updates: 1
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.MENU_SE = 'M' UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' ) SELECT UP_MENU_ID FROM R WHERE LV > 0 AND MENU_URL = ? ORDER BY FULL_ORD_SEQ DESC, MENU_NM LIMIT 1
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: /admin/company(String)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE UP_MENU_ID IS NOT NULL ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 10
2021-10-01 17:18:28 INFO [http-nio-8081-exec-6] c.p.c.i.MenuCheckInterceptor [MenuCheckInterceptor.java:59] [FLOWID:] subMenuList : MenuModel(upMenuId=mn5000001, menuId=mn5000002, menuNm=Admin, menuUrl=/admin, menuDsc=, ordSeq=2, menuSe=M, rgstId=SYSTEM, rgstDt=2021-09-30T14:23:54, modiId=SYSTEM, modiDt=2021-09-30T14:23:54, useYn=Y, menuAttr={"attr":{"insert":true,"update":true,"detail":true,"delete":true}}, lv=1, fullPathId=["mn5000001","mn5000002"], fullPathNm=["HOME","Admin"], fullOrdSeq=00001-00002, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE LV = 1 ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-6] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /error(String)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-2] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 0
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-4] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-4] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /error(String)
2021-10-01 17:18:28 DEBUG [http-nio-8081-exec-4] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 0
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /admin/company(String)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.c.s.AuthChecker [AuthChecker.java:77] [FLOWID:] MenuModel(upMenuId=mn5000002, menuId=mn5000011, menuNm=회사 관리, menuUrl=/admin/company, menuDsc=회사 관리, ordSeq=11, menuSe=M, rgstId=jinix55, rgstDt=2021-10-01T13:29:42, modiId=jinix55, modiDt=2021-10-01T13:29:58, useYn=Y, menuAttr={}, lv=2, fullPathId=["mn5000001","mn5000002","mn5000011"], fullPathNm=["HOME","Admin","회사 관리"], fullOrdSeq=00001-00002-00011, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:18:48 INFO [http-nio-8081-exec-3] c.p.a.c.CompanyController [CompanyController.java:47] [FLOWID:]  =============== company get in ==============
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT ROW_NUMBER() OVER (ORDER BY UPPER(MODI_DT) ASC) AS ROWNUM , COMPANY_ID , COMPANY_CODE , COMPANY_NO , COMPANY_NM , COMPANY_DSC , ADDRESS , TELEPHONE_NO , REPRESENTATIVE_NM , NOTE , USE_YN , RGST_ID , RGST_DT , MODI_ID , MODI_DT FROM T_COMPANY ORDER BY ROWNUM ASC limit ?, ?
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 0(Integer), 10(Integer)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.c.m.C.selectCompanyList [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 3
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: SELECT count(1) FROM T_COMPANY
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: 
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.c.m.C.selectCompanyListCount [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:48 INFO [http-nio-8081-exec-3] c.p.c.l.LoggerAspect [LoggerAspect.java:98] [FLOWID:] params : {msg={}, method_nm=company, user_info=MemberModel(rownum=null, userId=jinix55, userNm=장진민, pstnCode=null, pstnNm=null, deptCode=null, deptNm=null, hdeptCode=null, companyCode=null, companyNm=null, adofDeptCode=null, adofDeptNm=null, dutySe=null, authId=au2000001, authCl=null, authUseYn=Y, authNm=최고 관리자, useYn=Y, modiSe=I, lastLogDt=2021-09-30T16:23:09, startDt=2021-09-01T16:01:51, endDt=2021-09-01T16:01:51, rgstId=null, rgstDt=null, modiId=null, modiDt=null, expiredYn=N, lockYn=N, mgrYn=Y, fileId=null, fileUrl=null, clientIp=0:0:0:0:0:0:0:1, mgrSysEnv=null, userSysEnv=null, bfDeptCode=null, deptUpdtDt=2021-09-30T16:01:51, userSysHome=null, mgrAuthId=null, mgrAuthNm=null, userAuthChage=null, mgrAuthChange=null, dtLimitYn=null, password=null, newPassword=null, passError=0, PassInit=null), server_ip=192.168.56.1 / 172.20.10.6, controller_nm=CompanyController, client_ip=0:0:0:0:0:0:0:1, rqst_uri=/admin/company, rqst_method=GET}
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: insert into t_log_rqst_mgr_sys ( log_dt , user_id , user_nm , pstn_code , pstn_nm , dept_code , dept_nm , auth_id , auth_nm , client_ip , server_ip , rqst_method , rqst_uri , program_nm , controller_nm , method_nm , msg ) values ( NOW() , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: jinix55(String), 장진민(String), null, null, null, null, au2000001(String), 최고 관리자(String), 0:0:0:0:0:0:0:1(String), 192.168.56.1 / 172.20.10.6(String), GET(String), /admin/company(String), WEB(String), CompanyController(String), company(String), {}(String)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.l.m.L.insert [BaseJdbcLogger.java:137] [FLOWID:] <==    Updates: 1
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.MENU_SE = 'M' UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' ) SELECT UP_MENU_ID FROM R WHERE LV > 0 AND MENU_URL = ? ORDER BY FULL_ORD_SEQ DESC, MENU_NM LIMIT 1
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: /admin/company(String)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectUpperMenuIdForMenuUrl [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE UP_MENU_ID IS NOT NULL ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectLeftMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 10
2021-10-01 17:18:48 INFO [http-nio-8081-exec-3] c.p.c.i.MenuCheckInterceptor [MenuCheckInterceptor.java:59] [FLOWID:] subMenuList : MenuModel(upMenuId=mn5000001, menuId=mn5000002, menuNm=Admin, menuUrl=/admin, menuDsc=, ordSeq=2, menuSe=M, rgstId=SYSTEM, rgstDt=2021-09-30T14:23:54, modiId=SYSTEM, modiDt=2021-09-30T14:23:54, useYn=Y, menuAttr={"attr":{"insert":true,"update":true,"detail":true,"delete":true}}, lv=1, fullPathId=["mn5000001","mn5000002"], fullPathNm=["HOME","Admin"], fullOrdSeq=00001-00002, menuAuthAttr=null, treeJson=null, authId=null, authUseYn=null)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE LV = 1 ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.a.m.m.M.selectTopMenuListWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 1
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /error(String)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-3] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 0
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-8] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==>  Preparing: WITH RECURSIVE R AS ( SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , 0 AS LV , JSON_ARRAY(cast(M.MENU_ID as varchar(4000))) AS FULL_PATH_ID , JSON_ARRAY(cast(M.MENU_NM as varchar(4000))) AS FULL_PATH_NM , cast(LPAD(M.ORD_SEQ,5,'0') as varchar(4000)) AS FULL_ORD_SEQ FROM t_group_menu M JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = ? WHERE NULLIF(M.UP_MENU_ID,'') IS NULL UNION ALL SELECT M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT , R.LV + 1 AS LV , JSON_ARRAY_APPEND(R.FULL_PATH_ID,'$',M.MENU_ID) AS FULL_PATH_ID , JSON_ARRAY_APPEND(R.FULL_PATH_NM,'$',M.MENU_NM) AS FULL_PATH_NM , CONCAT(R.FULL_ORD_SEQ,'-',LPAD(M.ORD_SEQ,5,'0')) AS FULL_ORD_SEQ FROM R JOIN t_group_menu M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y' JOIN t_group_menu_auth A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = ? ) SELECT MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT , LV , R.FULL_PATH_ID , R.FULL_PATH_NM , R.FULL_ORD_SEQ FROM R WHERE MENU_URL = ? ORDER BY FULL_ORD_SEQ, MENU_NM
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-8] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] ==> Parameters: au2000001(String), au2000001(String), /error(String)
2021-10-01 17:18:48 DEBUG [http-nio-8081-exec-8] c.p.c.s.m.S.selectMenuWithAuth [BaseJdbcLogger.java:137] [FLOWID:] <==      Total: 0
